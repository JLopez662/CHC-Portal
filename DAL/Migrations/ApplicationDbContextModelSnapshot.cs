// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Confidencial", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PIN")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassCFSE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassCofim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassEftps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PassSuri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCFSE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserCofim")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserDept")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserEftps")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserMunicipio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserSuri")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Confidenciales");
                });

            modelBuilder.Entity("DAL.Models.Administrativo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contrato")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Facturacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacturacionBase")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IVU")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Staff")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StaffDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Administrativos");
                });

            modelBuilder.Entity("DAL.Models.Contributivo", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Choferil")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DeptEstado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estatal")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Poliza")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegComerciante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Vencimiento")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.ToTable("Contributivos");
                });

            modelBuilder.Entity("DAL.Models.Empleado", b =>
                {
                    b.Property<string>("EID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pass")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EID");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("DAL.Models.Identificacion", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Accionista")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cargo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LicConducir")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Nacimiento")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SSNA")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Identificaciones");
                });

            modelBuilder.Entity("DAL.Models.Individuo", b =>
                {
                    b.Property<string>("SSN")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("SSN");

                    b.ToTable("Individuos");
                });

            modelBuilder.Entity("DAL.Models.Pago", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Banco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BancoS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankClient")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BankClientS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVV")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CVVS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Expiracion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiracionS")
                        .HasColumnType("datetime2");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameBankS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCard")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameCardS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NombreComercial")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumRuta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumRutaS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalBank")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalBankS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TarjetaS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCuenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoCuentaS")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoTarjeta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoTarjetaS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Pagos");
                });

            modelBuilder.Entity("DAL.Models.Registro", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("ID");

                    b.ToTable("Registros");
                });

            modelBuilder.Entity("DAL.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("LockoutEnd")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordResetToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("PasswordResetTokenExpiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Demografico", b =>
                {
                    b.Property<string>("ID")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Contacto")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Dir")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DirFisica")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DirPostal")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("Incorporacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Industria")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("MID")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NAICS")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("NombreComercial")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime?>("Operaciones")
                        .HasColumnType("datetime2");

                    b.Property<string>("Patronal")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SSN")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Demograficos");
                });

            modelBuilder.Entity("Confidencial", b =>
                {
                    b.HasOne("DAL.Models.Registro", "Registro")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("DAL.Models.Administrativo", b =>
                {
                    b.HasOne("DAL.Models.Registro", "Registro")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("DAL.Models.Contributivo", b =>
                {
                    b.HasOne("DAL.Models.Registro", "Registro")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("DAL.Models.Identificacion", b =>
                {
                    b.HasOne("DAL.Models.Registro", "Registro")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("DAL.Models.Pago", b =>
                {
                    b.HasOne("DAL.Models.Registro", "Registro")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });

            modelBuilder.Entity("Demografico", b =>
                {
                    b.HasOne("DAL.Models.Registro", "Registro")
                        .WithMany()
                        .HasForeignKey("ID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Registro");
                });
#pragma warning restore 612, 618
        }
    }
}
