@model IEnumerable<DAL.Models.User>
@{
    ViewData["Title"] = "User Management";
}

<div class="card shadow border-0 my-4">
    <div class="card-header bg-secondary bg-gradient m-lg-0 py-3">
        <div class="row">
            <div class="text-center mt-5">
                <h1 style="color: white">User Management</h1>
                <h2 style="color: white">Manage the users of your application here.</h2>
            </div>
        </div>
    </div>

    <div class="card-body p-4">
        <div class="table-responsive">
            <table id="customTable" class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th style="width: 20%;">Email</th>
                        <th style="width: 10%;">FirstName</th>
                        <th style="width: 10%;">LastName</th>
                        <th style="width: 15%;">Phone</th>
                        <th style="width: 10%;">Role</th>
                        <th style="width: 10%;">Active</th>
                        <th style="width: 25%;">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr id="user-@user.Id">
                            <td class="user-email">@user.Email</td>
                            <td class="user-firstname">@user.FirstName</td>
                            <td class="user-lastname">@user.LastName</td>
                            <td class="user-phone">@user.Phone</td>
                            <td class="user-role">@user.Role</td>
                            <td>
                                @{
                                    var lockButtonClass = user.LockoutEnd > DateTime.Now ? "btn-danger" : "btn-success";
                                    var lockButtonText = user.LockoutEnd > DateTime.Now ? "Inactive" : "Active";
                                    var lockButtonIcon = user.LockoutEnd > DateTime.Now ? "fas fa-lock" : "fas fa-unlock";
                                }
                                <button onclick="LockUnlock('@user.Id')" class="btn @lockButtonClass lock-unlock-btn" data-id="@user.Id" style="cursor:pointer;">
                                    <i class="@lockButtonIcon"></i> @lockButtonText
                                </button>
                            </td>
                            <td>
                                <div class="dropdown">
                                    <button class="btn btn-secondary dropbtn">...</button>
                                    <div class="dropdown-content">
                                        <a href="#" onclick="editUser('@user.Id', '@user.Email', '@user.FirstName', '@user.LastName', '@user.Phone')">Update</a>
                                        <a href="#" onclick="passwordRecovery('@user.Email')">Password Recovery</a>
                                    </div>
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
        <div class="text-right">
            <button type="button" class="btn btn-success" onclick="createUser()">Create New User</button>
        </div>
    </div>
</div>


<!-- Off-canvas for editing/creating user details -->
<div class="offcanvas offcanvas-start" tabindex="-1" id="userOffcanvas" aria-labelledby="userOffcanvasLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="userOffcanvasLabel">User Details</h5>
        <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form id="userForm" autocomplete="on">
            <input type="hidden" id="userId" name="Id" />
            <div class="mb-3">
                <label for="userEmail" class="form-label">Email</label>
                <input type="email" class="form-control" id="userEmail" name="Email" required>
            </div>
            <div class="mb-3">
                <label for="userFirstName" class="form-label">First Name</label>
                <input type="text" class="form-control" id="userFirstName" name="FirstName" required>
            </div>
            <div class="mb-3">
                <label for="userLastName" class="form-label">Last Name</label>
                <input type="text" class="form-control" id="userLastName" name="LastName" required>
            </div>
            <div class="mb-3">
                <label for="userPhone" class="form-label">Phone</label>
                <input type="text" class="form-control" id="userPhone" name="Phone" required>
            </div>
            <div class="mb-3">
                <label for="userRole" class="form-label">Role</label>
                <select class="form-control" id="userRole" name="Role" required>
                    <option value="User">User</option>
                    <option value="Admin">Admin</option>
                </select>
            </div>

            <div class="mb-3 password-field">
                <label for="userPassword" class="form-label">Password</label>
                <input type="password" class="form-control" id="userPassword" name="Password">
            </div>
            <button type="submit" class="btn save-button">Save</button>
        </form>
    </div>
</div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.21/js/jquery.dataTables.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/toastr.js/latest/toastr.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/5.1.3/js/bootstrap.bundle.min.js"></script>
    <script>
        function editUser(id, email, firstName, lastName, phone, role) {
            $.ajax({
                url: '@Url.Action("GetUserById", "UserManagement")',
                type: 'GET',
                data: { id: id },
                success: function (response) {
                    if (response.success) {
                        var user = response.data;
                        $('#userId').val(user.id);
                        $('#userEmail').val(user.email);
                        $('#userFirstName').val(user.firstName);
                        $('#userLastName').val(user.lastName);
                        $('#userPhone').val(user.phone);
                        $('#userRole').val(user.role); // Set the role dropdown value
                        $('.password-field').hide(); // Hide the password field for editing
                        $('#userPassword').val(''); // Clear the password field
                        $('#userOffcanvasLabel').text('Edit User');
                        var userOffcanvas = new bootstrap.Offcanvas(document.getElementById('userOffcanvas'));
                        userOffcanvas.show();
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('An error occurred while fetching user details.');
                }
            });
        }

        function createUser() {
            $('#userId').val('');
            $('#userEmail').val('');
            $('#userFirstName').val('');
            $('#userLastName').val('');
            $('#userPhone').val('');
            $('#userRole').val('');
            $('#userPassword').val(''); // Clear the password field
            $('.password-field').show(); // Show the password field for creating
            $('#userOffcanvasLabel').text('Create New User');
            var userOffcanvas = new bootstrap.Offcanvas(document.getElementById('userOffcanvas'));
            userOffcanvas.show();
        }

        function passwordRecovery(email) {
            toastr.info('Starting Password Recovery');
            $.ajax({
                url: '@Url.Action("PasswordRecovery", "Account")',
                type: 'POST',
                data: { email: email },
                success: function (response) {
                    if (response.success) {
                        toastr.success('Password recovery email sent successfully.');
                    } else {
                        toastr.error('Failed to send password recovery email.');
                    }
                },
                error: function () {
                    toastr.error('An error occurred while sending password recovery email.');
                }
            });
        }

        function LockUnlock(userId) {
            var parsedUserId = parseInt(userId, 10); // Parse the userId to an integer
            console.log("LockUnlock User ID:", parsedUserId); // Log the parsed user ID for debugging

            $.ajax({
                url: '@Url.Action("LockUnlock", "UserManagement")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ id: parsedUserId }),
                success: function (response) {
                    console.log("LockUnlock Server Response:", response); // Log server response for debugging
                    if (response.success) {
                        toastr.success(response.message);

                        // Update the button class, text, and icon dynamically
                        var button = $("#user-" + parsedUserId + " .lock-unlock-btn");
                        if (response.message.includes("Unlocked")) {
                            button.removeClass("btn-danger").addClass("btn-success");
                            button.html('<i class="fas fa-unlock"></i> Active');
                        } else if (response.message.includes("Locked")) {
                            button.removeClass("btn-success").addClass("btn-danger");
                            button.html('<i class="fas fa-lock"></i> Inactive');
                        }
                    } else {
                        toastr.error(response.message);
                    }
                },
                error: function () {
                    toastr.error('An error occurred while updating user lock status.');
                }
            });
        }








        $('#userForm').on('submit', function (e) {
            e.preventDefault();
            var data = $(this).serializeArray();

            // Log the form data
            console.log("Form Data Before Filter:", data);

            // Remove password field if it is empty (only for updates)
            if ($('#userId').val()) {
                data = data.filter(function (item) {
                    return !(item.name === "Password" && item.value === "");
                });
            }

            // Log the form data after filtering
            console.log("Form Data After Filter:", data);

            var url = $('#userId').val() ? '@Url.Action("UpdateUser", "UserManagement")' : '@Url.Action("CreateUser", "UserManagement")';
            console.log("Form Submission URL:", url);
            $.ajax({
                url: url,
                type: 'POST',
                data: $.param(data),
                success: function (response) {
                    console.log("Server Response:", response);
                    if (response.success) {
                        toastr.success(response.message);
                        if ($('#userId').val()) {
                            var row = $('#user-' + response.data.id);
                            row.find('.user-email').text(response.data.email);
                            row.find('.user-firstname').text(response.data.firstName);
                            row.find('.user-lastname').text(response.data.lastName);
                            row.find('.user-phone').text(response.data.phone);
                            row.find('.user-role').text(response.data.role);
                        } else {
                            location.reload(); // Reload to show the new user in the table
                        }
                    } else {
                        toastr.error(response.message);
                    }
                    var userOffcanvas = bootstrap.Offcanvas.getInstance(document.getElementById('userOffcanvas'));
                    userOffcanvas.hide();
                },
                error: function () {
                    toastr.error('An error occurred while saving user details.');
                }
            });
        });

        $(document).ready(function () {
            $('#customTable').DataTable();
        });
    </script>
}

